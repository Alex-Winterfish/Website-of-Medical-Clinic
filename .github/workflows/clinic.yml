name: MedClinic CI

on: [push, pull_request]

env:
  SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 .

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        run: python manage.py migrate
        env:
          CI_TEST: 'true'

      - name: Run tests
        run: python manage.py test
        env:
          CI_TEST: 'true'
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USER_NAME }}" --password-stdin

      - name: Build MedClinic image
        run: docker build --no-cache -t ${{ secrets.DOCKER_HUB_USER_NAME }}/clinic .

      - name: Build nginx image
        run: docker build --no-cache -t ${{ secrets.DOCKER_HUB_USER_NAME }}/nginx-clinic ./nginx

      - name: Push MedClinic image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USER_NAME }}/clinic

      - name: Push Nginx image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USER_NAME }}/nginx-clinic

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          mkdir clinic || true
          cd clinic
          sudo docker compose down || true
          sudo docker compose up -d --pull always
          EOF